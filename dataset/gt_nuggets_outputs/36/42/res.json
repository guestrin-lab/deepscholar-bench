{
  "qid": "2505.08071v1",
  "query": "Write a Related Works section for an academic paper given the paper's abstract. Here is the paper abstract:\nDe novo assembly enables investigations of unknown genomes, paving the way\nfor personalized medicine and disease management. However, it faces immense\ncomputational challenges arising from the excessive data volumes and\nalgorithmic complexity.\n  While state-of-the-art de novo assemblers utilize distributed systems for\nextreme-scale genome assembly, they demand substantial computational and memory\nresources. They also fail to address the inherent challenges of de novo\nassembly, including a large memory footprint, memory-bound behavior, and\nirregular data patterns stemming from complex, interdependent data structures.\nGiven these challenges, de novo assembly merits a custom hardware solution,\nthough existing approaches have not fully addressed the limitations.\n  We propose NMP-PaK, a hardware-software co-design that accelerates scalable\nde novo genome assembly through near-memory processing (NMP). Our channel-level\nNMP architecture addresses memory bottlenecks while providing sufficient\nscratchpad space for processing elements. Customized processing elements\nmaximize parallelism while efficiently handling large data structures that are\nboth dynamic and interdependent. Software optimizations include customized\nbatch processing to reduce the memory footprint and hybrid CPU-NMP processing\nto address hardware underutilization caused by irregular data patterns.\n  NMP-PaK conducts the same genome assembly while incurring a 14X smaller\nmemory footprint compared to the state-of-the-art de novo assembly. Moreover,\nNMP-PaK delivers a 16X performance improvement over the CPU baseline, with a\n2.4X reduction in memory operations. Consequently, NMP-PaK achieves 8.3X\ngreater throughput than state-of-the-art de novo assembly under the same\nresource constraints, showcasing its superior computational efficiency.",
  "nuggets": [
    {
      "text": "De novo assembly faces computational and memory bottlenecks",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "Distributed systems for de novo assembly require large resources",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "State-of-the-art assemblers struggle with memory footprint and irregular data",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "Near-memory processing (NMP) accelerators address memory bottlenecks",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "NMP-PaK targets Iterative Compaction, the most time-consuming step",
      "importance": "vital",
      "assignment": "partial_support"
    },
    {
      "text": "NMP-PaK performs reference-free assembly with reduced memory footprint",
      "importance": "vital",
      "assignment": "partial_support"
    },
    {
      "text": "NMP-PaK achieves 14X smaller memory footprint than state-of-the-art",
      "importance": "vital",
      "assignment": "not_support"
    },
    {
      "text": "NMP-PaK achieves 8.3X throughput over state-of-the-art under same resources",
      "importance": "vital",
      "assignment": "not_support"
    },
    {
      "text": "Zhou et al. used hybrid memory cubes for Megahit assembly acceleration",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Hybrid memory cubes discontinued; Megahit does not scale to large genomes",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Angizi et al. proposed PIM-Assembler using in-DRAM X(N)OR for small genomes",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "PIM-Assembler not demonstrated for extreme-scale assembly",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Wu et al. accelerated k-mer counting with in-storage processing",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "GPU-based accelerators improve local assembly, sorting, and prefix scan",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "GPUs limited by memory capacity and irregular access patterns",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Non-De Bruijn graph accelerators focus on sequence mapping and alignment",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "BWA-MEM and minimap2 are standard for short and long-read alignment",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "mm2-fast, mm2-ax, mm2-gb accelerate minimap2 on CPUs and GPUs",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Guo et al. used FPGA for sequence mapping acceleration",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "SeGraM and Harp accelerate sequence-to-graph mapping of long reads",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "MegIS uses in-storage processing for metagenomics analysis",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "GenDP and QUETZAL accelerate dynamic programming for genomic applications",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "NMP-PaK delivers 16X CPU baseline performance, 2.4X fewer memory operations",
      "importance": "okay",
      "assignment": "not_support"
    }
  ],
  "supported_nuggets": [
    {
      "text": "De novo assembly faces computational and memory bottlenecks",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "Distributed systems for de novo assembly require large resources",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "State-of-the-art assemblers struggle with memory footprint and irregular data",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "Near-memory processing (NMP) accelerators address memory bottlenecks",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "Zhou et al. used hybrid memory cubes for Megahit assembly acceleration",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Hybrid memory cubes discontinued; Megahit does not scale to large genomes",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Angizi et al. proposed PIM-Assembler using in-DRAM X(N)OR for small genomes",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "PIM-Assembler not demonstrated for extreme-scale assembly",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Wu et al. accelerated k-mer counting with in-storage processing",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "GPU-based accelerators improve local assembly, sorting, and prefix scan",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "GPUs limited by memory capacity and irregular access patterns",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Non-De Bruijn graph accelerators focus on sequence mapping and alignment",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "BWA-MEM and minimap2 are standard for short and long-read alignment",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "mm2-fast, mm2-ax, mm2-gb accelerate minimap2 on CPUs and GPUs",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Guo et al. used FPGA for sequence mapping acceleration",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "SeGraM and Harp accelerate sequence-to-graph mapping of long reads",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "MegIS uses in-storage processing for metagenomics analysis",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "GenDP and QUETZAL accelerate dynamic programming for genomic applications",
      "importance": "okay",
      "assignment": "support"
    }
  ],
  "partially_supported_nuggets": [
    {
      "text": "De novo assembly faces computational and memory bottlenecks",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "Distributed systems for de novo assembly require large resources",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "State-of-the-art assemblers struggle with memory footprint and irregular data",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "Near-memory processing (NMP) accelerators address memory bottlenecks",
      "importance": "vital",
      "assignment": "support"
    },
    {
      "text": "NMP-PaK targets Iterative Compaction, the most time-consuming step",
      "importance": "vital",
      "assignment": "partial_support"
    },
    {
      "text": "NMP-PaK performs reference-free assembly with reduced memory footprint",
      "importance": "vital",
      "assignment": "partial_support"
    },
    {
      "text": "Zhou et al. used hybrid memory cubes for Megahit assembly acceleration",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Hybrid memory cubes discontinued; Megahit does not scale to large genomes",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Angizi et al. proposed PIM-Assembler using in-DRAM X(N)OR for small genomes",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "PIM-Assembler not demonstrated for extreme-scale assembly",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Wu et al. accelerated k-mer counting with in-storage processing",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "GPU-based accelerators improve local assembly, sorting, and prefix scan",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "GPUs limited by memory capacity and irregular access patterns",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Non-De Bruijn graph accelerators focus on sequence mapping and alignment",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "BWA-MEM and minimap2 are standard for short and long-read alignment",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "mm2-fast, mm2-ax, mm2-gb accelerate minimap2 on CPUs and GPUs",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "Guo et al. used FPGA for sequence mapping acceleration",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "SeGraM and Harp accelerate sequence-to-graph mapping of long reads",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "MegIS uses in-storage processing for metagenomics analysis",
      "importance": "okay",
      "assignment": "support"
    },
    {
      "text": "GenDP and QUETZAL accelerate dynamic programming for genomic applications",
      "importance": "okay",
      "assignment": "support"
    }
  ],
  "nuggets_metrics": {
    "strict_vital_score": 0.5,
    "strict_all_score": 0.782608695652174,
    "vital_score": 0.625,
    "all_score": 0.8260869565217391
  }
}