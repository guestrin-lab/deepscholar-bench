qid,query,nuggets,supported_nuggets,partially_supported_nuggets,nuggets_metrics
2504.06975v1,"Write a Related Works section for an academic paper given the paper's abstract. Here is the paper abstract:
In order to achieve low latency, high throughput, and partition tolerance,
modern databases forgo strong transaction isolation for weak isolation
guarantees. However, several production databases have been found to suffer
from isolation bugs, breaking their data-consistency contract. Black-box
testing is a prominent technique for detecting isolation bugs, by checking
whether histories of database transactions adhere to a prescribed isolation
level.
  Testing databases on realistic workloads of large size requires isolation
testers to be as efficient as possible, a requirement that has initiated a
study of the complexity of isolation testing. Although testing strong isolation
has been known to be NP-complete, weak isolation levels were recently shown to
be testable in polynomial time, which has propelled the scalability of testing
tools. However, existing testers have a large polynomial complexity,
restricting testing to workloads of only moderate size, which is not typical of
large-scale databases.
  In this work, we develop AWDIT, a highly-efficient and provably optimal
tester for weak database isolation. Given a history $H$ of size $n$ and $k$
sessions, AWDIT tests whether H satisfies the most common weak isolation levels
of Read Committed (RC), Read Atomic (RA), and Causal Consistency (CC) in time
$O(n^{3/2})$, $O(n^{3/2})$, and $O(n \cdot k)$, respectively, improving
significantly over the state of the art. Moreover, we prove that AWDIT is
essentially optimal, in the sense that there is a conditional lower bound of
$n^{3/2}$ for any weak isolation level between RC and CC. Our experiments show
that AWDIT is significantly faster than existing, highly optimized testers;
e.g., for the $\sim$20% largest histories, AWDIT obtains an average speedup of
$245\times$, $193\times$, and $62\times$ for RC, RA, and CC, respectively, over
the best baseline.","[{'text': 'Black-box testing detects isolation bugs in databases', 'importance': 'vital', 'assignment': 'support'}, {'text': 'Weak isolation levels testable in polynomial time', 'importance': 'vital', 'assignment': 'support'}, {'text': 'Existing weak isolation testers have high polynomial complexity', 'importance': 'vital', 'assignment': 'support'}, {'text': 'AWDIT achieves optimal complexity for weak isolation testing', 'importance': 'vital', 'assignment': 'partial_support'}, {'text': 'AWDIT tests RC, RA, CC in O(n^{3/2}), O(n^{3/2}), O(nÂ·k)', 'importance': 'vital', 'assignment': 'not_support'}, {'text': 'AWDIT significantly outperforms previous testers in speed', 'importance': 'vital', 'assignment': 'not_support'}, {'text': 'Conditional lower bound of n^{3/2} for weak isolation testing', 'importance': 'vital', 'assignment': 'partial_support'}, {'text': 'Parameterization by sessions/topology yields efficient algorithms', 'importance': 'vital', 'assignment': 'support'}, {'text': 'NP-completeness for strong and some weak memory models', 'importance': 'vital', 'assignment': 'support'}, {'text': 'Database isolation formalized axiomatically and operationally', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Testing strong isolation is NP-complete', 'importance': 'okay', 'assignment': 'support'}, {'text': 'AWDIT avoids exhaustive search over all Transactional Anomalous Patterns', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Plume checks weak isolation via Transactional Anomalous Patterns', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Strong isolation testers use SAT/SMT solving', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Consistency testing parallels shared-memory memory model verification', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Causally-consistent memory models allow efficient consistency checks', 'importance': 'okay', 'assignment': 'support'}]","[{'text': 'Black-box testing detects isolation bugs in databases', 'importance': 'vital', 'assignment': 'support'}, {'text': 'Weak isolation levels testable in polynomial time', 'importance': 'vital', 'assignment': 'support'}, {'text': 'Existing weak isolation testers have high polynomial complexity', 'importance': 'vital', 'assignment': 'support'}, {'text': 'Parameterization by sessions/topology yields efficient algorithms', 'importance': 'vital', 'assignment': 'support'}, {'text': 'NP-completeness for strong and some weak memory models', 'importance': 'vital', 'assignment': 'support'}, {'text': 'Database isolation formalized axiomatically and operationally', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Testing strong isolation is NP-complete', 'importance': 'okay', 'assignment': 'support'}, {'text': 'AWDIT avoids exhaustive search over all Transactional Anomalous Patterns', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Plume checks weak isolation via Transactional Anomalous Patterns', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Strong isolation testers use SAT/SMT solving', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Consistency testing parallels shared-memory memory model verification', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Causally-consistent memory models allow efficient consistency checks', 'importance': 'okay', 'assignment': 'support'}]","[{'text': 'Black-box testing detects isolation bugs in databases', 'importance': 'vital', 'assignment': 'support'}, {'text': 'Weak isolation levels testable in polynomial time', 'importance': 'vital', 'assignment': 'support'}, {'text': 'Existing weak isolation testers have high polynomial complexity', 'importance': 'vital', 'assignment': 'support'}, {'text': 'AWDIT achieves optimal complexity for weak isolation testing', 'importance': 'vital', 'assignment': 'partial_support'}, {'text': 'Conditional lower bound of n^{3/2} for weak isolation testing', 'importance': 'vital', 'assignment': 'partial_support'}, {'text': 'Parameterization by sessions/topology yields efficient algorithms', 'importance': 'vital', 'assignment': 'support'}, {'text': 'NP-completeness for strong and some weak memory models', 'importance': 'vital', 'assignment': 'support'}, {'text': 'Database isolation formalized axiomatically and operationally', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Testing strong isolation is NP-complete', 'importance': 'okay', 'assignment': 'support'}, {'text': 'AWDIT avoids exhaustive search over all Transactional Anomalous Patterns', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Plume checks weak isolation via Transactional Anomalous Patterns', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Strong isolation testers use SAT/SMT solving', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Consistency testing parallels shared-memory memory model verification', 'importance': 'okay', 'assignment': 'support'}, {'text': 'Causally-consistent memory models allow efficient consistency checks', 'importance': 'okay', 'assignment': 'support'}]","{'strict_vital_score': 0.5555555555555556, 'strict_all_score': 0.75, 'vital_score': 0.6666666666666666, 'all_score': 0.8125}"
